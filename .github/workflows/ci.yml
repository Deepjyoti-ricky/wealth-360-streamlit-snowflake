name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  quality-checks:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.9', '3.10', '3.11']

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r requirements-dev.txt

      - name: Code formatting check
        run: |
          black --check --diff .

      - name: Linting
        run: |
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      - name: Type checking
        run: |
          mypy streamlit_app.py --ignore-missing-imports

      - name: Security scan
        run: |
          pip install bandit
          bandit -r . -f json -o bandit-report.json || true

      - name: Import validation
        run: |
          python -c "
          import sys
          try:
              import streamlit, pandas, plotly
              print('✅ Core imports successful')
          except ImportError as e:
              print(f'❌ Import failed: {e}')
              sys.exit(1)
          "

      - name: Upload security report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: security-report-${{ matrix.python-version }}
          path: bandit-report.json

  documentation:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Check documentation
        run: |
          # Check for required files
          test -f README.md || (echo "❌ README.md missing" && exit 1)
          test -f LICENSE || (echo "❌ LICENSE missing" && exit 1)
          test -f CONTRIBUTING.md || (echo "❌ CONTRIBUTING.md missing" && exit 1)
          echo "✅ Documentation files present"

      - name: Validate README structure
        run: |
          grep -q "## Wealth 360 Streamlit" README.md || (echo "❌ README title missing" && exit 1)
          grep -q "### Running in Streamlit in Snowflake" README.md || (echo "❌ Snowflake instructions missing" && exit 1)
          echo "✅ README structure valid"
